{
	"info": {
		"_postman_id": "e3fae931-92a6-450c-9400-a9982ce71ceb",
		"name": "nassau-pos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32472356"
	},
	"item": [
		{
			"name": "consultar-por-cpf",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*",
							"    * DADO que o CPF preenchido existe na banco de dados",
							"    * QUANDO chamar o endpoint customer/{CPF} (GET)",
							"    * ENTAO deve retornar as informações do CUSTOMER",
							"    * E status 200.",
							"*/",
							"",
							"pm.test('status deve ser 200 após consultar o usuário', function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"CPF deve ser o CPF do usuario\", function() {",
							"    let response = pm.response.json();",
							"    pm.expect(response.cpf == '123.123.123-12').to.be.true;",
							"});",
							"",
							"pm.test(\"nome deve ser o nome do usuario\", function() {",
							"    let response = pm.response.json();",
							"    pm.expect(response.nome == 'Seu joao').to.be.true;",
							"});",
							"",
							"pm.test(\"cep deve ser o cep do usuario\", function() {",
							"    let response = pm.response.json();",
							"    pm.expect(response.cep == '50000-000').to.be.true;",
							"});",
							"",
							"pm.test(\"endereco deve ser o endereco do usuario\", function() {",
							"    let response = pm.response.json();",
							"    pm.expect(response.endereco == 'Rua bla bla bla').to.be.true;",
							"});",
							"",
							"pm.test(\"salvo deve ser true\", function() {",
							"    let response = pm.response.json();",
							"    pm.expect(response.salvo).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/customer/123.123.123-12",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customer",
						"123.123.123-12"
					]
				}
			},
			"response": []
		},
		{
			"name": "salvar-cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" /*",
							"    * DADO nome, CPF e CEP preenchidos",
							"    * QUANDO chamar endpoint customer(POST)",
							"    * ENTAO deve consultar o CEP",
							"    * E adicionar ao endereco o resultado",
							"    * E Salvar o cliente",
							"    * E retornar o status 201",
							"*/",
							"pm.test(\"status deve ser 201 após salvar o usuário\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"O campo CPF deve está preenchidos conforme requisição enviada\", function() {",
							"    let resposta = pm.response.json();",
							"    pm.expect(resposta.cpf == '123.123.123-12').to.be.true;",
							"});",
							"",
							"pm.test(\"O campo NOME deve está preenchidos conforme requisição enviada\", function() {",
							"    let resposta = pm.response.json();",
							"    pm.expect(resposta.nome == 'Seu joao').to.be.true;",
							"});",
							"",
							"pm.test(\"O campo CEP deve está preenchidos conforme requisição enviada\", function() {",
							"    let resposta = pm.response.json();",
							"    pm.expect(resposta.cep == '50000-000').to.be.true;",
							"});",
							"",
							"pm.test(\"O campo ENDERECO deve está preenchidos com retorno dos correios para o CEP Informado\", function() {",
							"    let resposta = pm.response.json();",
							"    pm.expect(resposta.endereco == 'Rua bla bla bla').to.be.true;",
							"});",
							"",
							"pm.test(\"O campo SALVO deve ser TRUE\", function() {",
							"    let resposta = pm.response.json();",
							"    pm.expect(resposta.salvo).to.be.true;",
							"}); ",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cpf\": \"123.123.123-12\",\n    \"nome\": \"Seu joao\",\n    \"cep\": \"50000-000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/customer/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customer",
						""
					]
				}
			},
			"response": []
		}
	]
}